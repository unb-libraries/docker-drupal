name: docker-drupal

on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  slack-start:
    name: Notify Slack of Testing Start
    runs-on: ubuntu-latest
    steps:
      - uses: FranzDiebold/github-env-vars-action@v2.1.0
      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,commit,repo,author,action,message
          custom_payload: |
            {
              attachments: [{
                color: 'warning',
                text: `${process.env.AS_REPO} ${process.env.CI_REF_NAME} - Build Started :shipit: (${process.env.AS_ACTION})\n${process.env.AS_COMMIT} ${process.env.AS_MESSAGE}\n${process.env.AS_AUTHOR}`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  set-deployment-image-name:
    name: Set deployment image name
    runs-on: ubuntu-latest
    steps:
      - uses: FranzDiebold/github-env-vars-action@v2
      -
        name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDDHHMMSS
      -
        name: Set Name
        run: echo "BUILD_IMAGE_NAME=drupal" >> $GITHUB_ENV
      -
        name: Set Full Name
        run: echo "BUILD_IMAGE_FULL_NAME=ghcr.io/$CI_REPOSITORY_OWNER/$BUILD_IMAGE_NAME" >> $GITHUB_ENV
      - name: Set SHA Image Tag
        env:
          TIMESTAMP: "${{ steps.current-time.outputs.formattedTime }}"
        run: echo "SHA_IMAGE_TAG=$CI_SHA_SHORT-$TIMESTAMP" > /tmp/image_name.env
      -
        name: Set SHA Image Name
        env:
          TIMESTAMP: "${{ steps.current-time.outputs.formattedTime }}"
        run: echo "SHA_IMAGE_NAME=$BUILD_IMAGE_FULL_NAME:$CI_SHA_SHORT-$TIMESTAMP" >> /tmp/image_name.env
      -
        name: Set Branch Image Name
        run: echo "BRANCH_IMAGE_NAME=$BUILD_IMAGE_FULL_NAME:$CI_REF_NAME" >> /tmp/image_name.env
      -
        name: Display Names
        run: cat /tmp/image_name.env
      -
        uses: actions/upload-artifact@v2
        with:
          name: build-image-name
          path: /tmp/image_name.env

  build-image:
    name: Build Image And Push
    needs: [set-deployment-image-name]
    runs-on: ubuntu-latest
    steps:
      - uses: FranzDiebold/github-env-vars-action@v2
      - uses: actions/checkout@v3
      -
        name: Retrieve Image Names
        uses: actions/download-artifact@v3
        with:
          name: build-image-name
          path: /tmp
      -
        name: Set Image Names
        run: cat /tmp/image_name.env >> $GITHUB_ENV
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64'
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to GHCR
        run: echo $GH_CONTAINER_REGISTRY_TOKEN | docker login ghcr.io -u $GH_CONTAINER_REGISTRY_USER --password-stdin
        env:
          GH_CONTAINER_REGISTRY_TOKEN: ${{secrets.GH_CONTAINER_REGISTRY_TOKEN}}
          GH_CONTAINER_REGISTRY_USER: ${{secrets.GH_CONTAINER_REGISTRY_USER}}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          pull: true
          push: true
          platforms: linux/amd64,linux/arm64/v8
          context: .
          file: ./Dockerfile
          tags: ${{ env.SHA_IMAGE_NAME }},${{ env.BRANCH_IMAGE_NAME }}
          build-args: |
            BUILD_DATE=${{ github.event.repository.updated_at }}
            VCS_REF=${{ env.CI_REF_NAME }}
            VERSION=${{ env.SHA_IMAGE_TAG }}

  slack-results:
    name: Notify Slack of Build Results
    runs-on: ubuntu-latest
    needs: [build-image]
    if: always()
    steps:
      - uses: FranzDiebold/github-env-vars-action@v2.1.0
      - uses: technote-space/workflow-conclusion-action@v2
      - name: Set environment variables
        run: |
          if [[ ${{ env.WORKFLOW_CONCLUSION }} == success ]]; then
            echo 'DEPLOY_EMOJI=:rocket:' >> $GITHUB_ENV
          else
            echo 'DEPLOY_EMOJI=:boom:' >> $GITHUB_ENV
          fi
      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          job_name:
          fields: workflow,job,commit,repo,ref,author,action,message
          custom_payload: |
            {
              attachments: [{
                color: '${{ env.WORKFLOW_CONCLUSION }}' === 'success' ? 'good' : '${{ env.WORKFLOW_CONCLUSION }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_REPO} ${process.env.CI_REF_NAME} - ${{ env.WORKFLOW_CONCLUSION }} ${{ env.DEPLOY_EMOJI }} (${process.env.AS_ACTION})\n${process.env.AS_COMMIT} ${process.env.AS_MESSAGE}\n${process.env.AS_AUTHOR}`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
